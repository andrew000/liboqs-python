name: Publish to PyPI

on:
  release:
    types: [ published ]

jobs:
  build-liboqs:
    name: Build liboqs ${{ matrix.buildplat[0] }}-${{ matrix.buildplat[1] }}-${{ matrix.buildplat[2] }}
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      fail-fast: true
      matrix:
        buildplat:
          - [ ubuntu-22.04, manylinux_x86_64, "" ]
          - [ windows-2022, win_amd64, "" ]
          - [ macos-14, macos_arm64, accelerate ]
    steps:
      - uses: actions/checkout@v4
        with:
          repository: open-quantum-safe/liboqs
          ref: 0.11.0

      - name: Build liboqs
        run: |
          cmake -S . -B build -DBUILD_SHARED_LIBS=ON -DOQS_BUILD_ONLY_LIB=ON -DCMAKE_INSTALL_PREFIX=artifacts ${{ matrix.buildplat[0] == 'windows-2022' && '-DCMAKE_WINDOWS_EXPORT_ALL_SYMBOLS=TRUE' || '' }}
          cmake --build build --parallel 8
          cmake --build build --target install

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: oqs_${{ matrix.buildplat[0] }}_${{ matrix.buildplat[1] }}
          path: ./artifacts/${{ matrix.buildplat[0] == 'windows-2022' && 'bin/oqs.dll' || matrix.buildplat[0] == 'ubuntu-22.04' && 'lib/liboqs.so' || matrix.buildplat[0] == 'macos-14' && 'lib/liboqs.dylib' }}

  build-wheel:
    name: Build wheel ${{ matrix.python }}-${{ matrix.buildplat[0] }}-${{ matrix.buildplat[1] }}-${{ matrix.buildplat[2] }}
    needs: [ build-liboqs ]
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      fail-fast: true
      matrix:
        buildplat:
          - [ ubuntu-22.04, manylinux_x86_64, "" ]
          - [ windows-2022, win_amd64, "" ]
          - [ macos-14, macos_arm64, accelerate ]
        python: [ "cp312" ]

    steps:
      - uses: actions/checkout@v4

      - name: Download liboqs artifacts
        uses: actions/download-artifact@v4
        with:
          name: oqs_${{ matrix.buildplat[0] }}_${{ matrix.buildplat[1] }}
          path: ./oqs/

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
          enable-cache: true

      - name: Set up Python ${{ matrix.python }}
        run: uv python install ${{ matrix.python }}

      - name: Build wheel
        run: uv build --wheel

      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: liboqs_python_whl-${{ matrix.python }}-${{ matrix.buildplat[1] }}-${{ matrix.buildplat[2] }}
          path: ./dist/*.whl

  build-sdist:
    name: Build sdist
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
          enable-cache: true

      - name: Set up Python ${{ matrix.python }}
        run: uv python install ${{ matrix.python }}

      - name: Build wheel
        run: uv build --sdist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: liboqs_python_sdist
          path: ./dist/*.tar.gz

  publish:
    name: Publish to PyPI
    needs: [ build-wheel, build-sdist ]
    runs-on: ubuntu-22.04
    env:
      UV_PYTHON: "3.12.7"
    environment:
      name: pypi
      url: https://pypi.org/p/pqcow-liboqs
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
          enable-cache: true

      - name: Set up Python ${{ env.UV_PYTHON }}
        run: uv python install ${{ env.UV_PYTHON }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ~/dist

      - name: üêç Publish distribution üì¶
        run: |
          ls -la ~/dist
          uv publish ~/dist/*.{whl,tar.gz}
